# Project
set :application, "Openl10n"
set :domain, ""

# Directory, user and filesystem
set :deploy_to, "/var/www/#{domain}"
set :user, ""
set :use_sudo, true
set :use_set_permissions, true
set :webserver_user, "www-data"
set :permission_method, :chown

# HTTP server
role :web, domain
role :app, domain, :primary => true

# Github repository
set :scm, :git
set :repository, ""
set :branch, ""
set :keep_releases, 5

# Symfony2 configuration
set :shared_files, [app_path + "/config/parameters.yml"]
set :shared_children, [app_path + "/logs", app_path + "/sessions", web_path + "/uploads"]
set :writable_dirs, [app_path + "/cache", app_path + "/logs", app_path + "/sessions", web_path + "/uploads", app_path + "/sessions"]
set :model_manager, "doctrine"
set :dump_assetic_assets, true
set :assets_install, true
set :assets_symlinks, true
set :clear_controllers, true
set :use_composer, true

# Be more verbose by uncommenting the following line
#logger.level = Logger::MAX_LEVEL

# Run some custom tasks
after 'symfony:cache:warmup', 'openl10n:assets_build'
#after :deploy, 'symfony:doctrine:schema:update'
after "deploy", "deploy:cleanup"

namespace :openl10n do
  task :assets_build do
    capifony_pretty_print "--> Installing Node dependencies"
    invoke_command "sh -c 'cd #{latest_release} && npm install'", :via => run_method
    capifony_puts_ok

    capifony_pretty_print "--> Installing Bower dependencies"
    invoke_command "sh -c 'cd #{latest_release} && ./node_modules/.bin/bower install'", :via => run_method
    capifony_puts_ok

    capifony_pretty_print "--> Launching gulp to compile assets"
    invoke_command "sh -c 'cd #{latest_release} && ./node_modules/.bin/gulp build --prod'", :via => run_method
    capifony_puts_ok
  end
end
